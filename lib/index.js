'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var _download=require('download'),_download2=_interopRequireDefault(_download),_moment=require('moment'),_moment2=_interopRequireDefault(_moment),_path=require('path'),_path2=_interopRequireDefault(_path),_storage=require('@google-cloud/storage');function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const oneHour=(0,_moment2.default)().add(1,'hours').format();class GCS{constructor(a,b,c='./'){const d=new _storage.Storage({projectId:a});this.myBucket=d.bucket(b),this.tempPath=_path2.default.join(c,'temp')}async downloadToLocal(a=''){try{await(0,_download2.default)(a,this.tempPath)}catch(a){console.log(a)}return _path2.default.join(this.tempPath,_path2.default.basename(a))}async checkExists(a){try{const b=await this.myBucket.file(a).exists();return b[0]}catch(a){console.log(a)}return!1}async getSignedUrl(a,b=oneHour){try{const c=await this.myBucket.file(a).getSignedUrl({action:'read',expires:b});return c[0]}catch(a){console.log(a)}return!1}async upload(a,b){try{const c=await this.myBucket.upload(a,{destination:b,metadata:{contentDisposition:`attachment; filename="${_path2.default.basename(b)}"`}});return c}catch(a){console.log(a)}return!1}}exports.default=GCS,module.exports=exports['default'];